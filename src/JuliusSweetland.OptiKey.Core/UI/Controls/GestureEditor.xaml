<!--Copyright (c) 2020 OPTIKEY LTD (UK company number 11854839) - All Rights Reserved-->
<UserControl x:Class="JuliusSweetland.OptiKey.UI.Controls.GestureEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:controls="clr-namespace:JuliusSweetland.OptiKey.UI.Controls"
             xmlns:valueConverters="clr-namespace:JuliusSweetland.OptiKey.UI.ValueConverters"
             mc:Ignorable="d">
  <UserControl.Resources>
    <valueConverters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Label Grid.Column="0" Content="Gesture Name"/>
      <Label Grid.Column="1" Content="Cooldown" Margin="5,0"/>
      <Label Grid.Column="2" Content="Active" Margin="5,0"/>
      <TextBox Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="5" Width="230"
                 Text="{Binding EyeGesture.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
      <c:NumericUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="5"
                         Minimum="100" Maximum="10000" HideUpDownButtons="True"
                         Value="{Binding EyeGesture.Cooldown}"
                         ToolTip="Amount of time that must pass between each activation of this gesture"/>
      <CheckBox Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                IsChecked="{Binding EyeGesture.Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
    <ListBox Grid.Row="1" Name="StepList" Background="Transparent"
                 ItemsSource="{Binding EyeGesture.Steps}">
      <ListBox.ItemContainerStyle>
        <Style TargetType="ListBoxItem">
          <EventSetter Event="MouseEnter" Handler="SelectStep" />
        </Style>
      </ListBox.ItemContainerStyle>
      <ListBox.ItemTemplate>
        <DataTemplate>
          <Border CornerRadius="4" Background="#7F01476f" Margin="2">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <StackPanel Grid.Column="1" Grid.RowSpan="3">
                <Border Width="34" Height="34" Background="IndianRed"
                            BorderThickness="0" CornerRadius="4" HorizontalAlignment="Right">
                  <Button FontSize="16" Content="x" Foreground="White"
                              Background="Transparent" BorderThickness="0" Click="DeleteStep_Click"/>
                </Border>
                <Button Margin="2" FontFamily="Marlett" FontSize="20" Content="5"
                            Click="MoveUp_Click" Width="30" Height="30" HorizontalAlignment="Right"/>
                <Button Margin="2" FontFamily="Marlett" FontSize="20" Content="6"
                            Click="MoveDown_Click" Width="30" Height="30" HorizontalAlignment="Right"/>
              </StackPanel>
              <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" SharedSizeGroup="common"/>
                  <ColumnDefinition Width="*" SharedSizeGroup="grid"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="type"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="timeout"/>
                  </Grid.ColumnDefinitions>
                  <Label  VerticalAlignment="Top" Content="Type"/>
                  <ComboBox Grid.Row="1" VerticalAlignment="Center" Margin="5"
                                ItemsSource="{Binding Source={x:Static 
                                    controls:GestureEditor.StepTypeList}}"
                                SelectedItem="{Binding Type, UpdateSourceTrigger=PropertyChanged}"
                                SelectionChanged="TypeChanged"/>
                  <Label Grid.Column="1" VerticalAlignment="Top" Content="Time Limit"/>
                  <c:NumericUpDown Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Margin="5" 
                                       Minimum="100" Maximum="10000" HideUpDownButtons="True"
                                       Value="{Binding TimeLimit}"/>
                </Grid>
                <Grid x:Name="FixationGrid" Grid.Column="1">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="f1"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="f2"/>
                  </Grid.ColumnDefinitions>
                  <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                      <Setter Property="Visibility" Value="Collapsed" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="Fixation">
                          <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="ReturnToFixation">
                          <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Grid.Style>
                  <Label Grid.Column="0" VerticalAlignment="Top" Content="Dwell Time"/>
                  <Label Grid.Column="1" VerticalAlignment="Top" Content="Radius"/>
                  <c:NumericUpDown Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding DwellTime, UpdateSourceTrigger=PropertyChanged}"/>
                  <c:NumericUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding Radius, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
                <Grid x:Name="LookAtArea" Grid.Column="1">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="sc1"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="sc2"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="sc3"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="sc4"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="sc5"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="sc6"/>
                  </Grid.ColumnDefinitions>
                  <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                      <Setter Property="Visibility" Value="Collapsed" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="LookAtArea">
                          <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Grid.Style>
                  <Label Grid.Column="0" VerticalAlignment="Top" Content="Dwell Time"/>
                  <Label Grid.Column="1" VerticalAlignment="Top" Content="Left"/>
                  <Label Grid.Column="2" VerticalAlignment="Top" Content="Top"/>
                  <Label Grid.Column="3" VerticalAlignment="Top" Content="Width"/>
                  <Label Grid.Column="4" VerticalAlignment="Top" Content="Height"/>
                  <Label Grid.Column="5" VerticalAlignment="Top" Content="Round"/>
                  <c:NumericUpDown Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding DwellTime, UpdateSourceTrigger=PropertyChanged}"/>
                  <c:NumericUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding Left, UpdateSourceTrigger=PropertyChanged}"/>
                  <c:NumericUpDown Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding Top, UpdateSourceTrigger=PropertyChanged}" />
                  <c:NumericUpDown Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding Width, UpdateSourceTrigger=PropertyChanged}" />
                  <c:NumericUpDown Grid.Row="1" Grid.Column="4" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding Height, UpdateSourceTrigger=PropertyChanged}" />
                  <CheckBox Grid.Row="1" Grid.Column="5" VerticalAlignment="Center" Margin="5"
                                  IsChecked="{Binding Round, UpdateSourceTrigger=PropertyChanged}"
                                  Checked="CheckBox_Changed" Unchecked="CheckBox_Changed"
                                  HorizontalAlignment="Center"/>
                </Grid>
                <Grid x:Name="LookInDirection" Grid.Column="1">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" SharedSizeGroup="scx"/>
                    <ColumnDefinition Width="*" SharedSizeGroup="scy"/>
                  </Grid.ColumnDefinitions>
                  <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                      <Setter Property="Visibility" Value="Collapsed" />
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="LookInDirection">
                          <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Grid.Style>
                  <Label Grid.Column="0" VerticalAlignment="Top" Content="X-Amount"/>
                  <Label Grid.Column="1" VerticalAlignment="Top" Content="Y-Amount"/>
                  <c:NumericUpDown Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding X, UpdateSourceTrigger=PropertyChanged}" />
                  <c:NumericUpDown Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="5"
                                         HideUpDownButtons="True" ValueChanged="NumericUpDown_ValueChanged"
                                         Value="{Binding Y, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
              </Grid>
              <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Label Content="Options" VerticalAlignment="Center" Margin="5"/>
                <Button Margin="5" Content="Add Command" Click="AddEvent_Click"/>
                <Button Content="Insert Step" Margin="5" Click="InsertStep_Click"/>
                <Button Content="Copy Step" Margin="5" Click="CopyStep_Click"/>
              </StackPanel>
              <Border Grid.Row="2" Grid.ColumnSpan="2" BorderBrush="Black" Margin="0,5,0,0"
                          BorderThickness="2" CornerRadius="4">
                <ListBox Name="CommandList" Background="Transparent" 
                                    ItemsSource="{Binding Commands}">
                  <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                      <EventSetter Event="MouseEnter" Handler="SelectEvent" />
                    </Style>
                  </ListBox.ItemContainerStyle>
                  <ListBox.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" SharedSizeGroup="cc1" />
                          <ColumnDefinition Width="Auto" SharedSizeGroup="cc2" />
                          <ColumnDefinition Width="Auto" SharedSizeGroup="cc3" />
                          <ColumnDefinition Width="Auto" SharedSizeGroup="cc4" />
                          <ColumnDefinition Width="Auto" SharedSizeGroup="cc5" />
                        </Grid.ColumnDefinitions>
                        <ComboBox Name="Command" Grid.Column="0" VerticalAlignment="Center" Margin="3"
                                      SelectedItem="{Binding NameAsString}"
                                      ItemsSource="{Binding Source={x:Static 
                                    controls:GestureEditor.CommandKeyList}}"/>
                        <TextBox Grid.Column="1" Text="{Binding Value}" VerticalAlignment="Center"
                                     Margin="3" MinWidth="60" />
                        <ComboBox Grid.Column="1" VerticalAlignment="Center" Margin="3" MinWidth="60"
                                      SelectedItem="{Binding Value}" 
                                      ItemsSource="{Binding Source={x:Static 
                                    controls:GestureEditor.FunctionKeyList}}"
                                      Visibility="{Binding HideFunctionList, Converter={StaticResource InvertedBoolToVisibilityConverter}}"/>
                        <Label Grid.Column="2" VerticalAlignment="Center" Content="Link Back:"
                                   Visibility="{Binding HideBack, Converter={StaticResource InvertedBoolToVisibilityConverter}}"/>
                        <CheckBox Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left"
                                      IsChecked="{Binding BackAction}" Visibility="{Binding HideBack, Converter={StaticResource InvertedBoolToVisibilityConverter}}"/>
                        <Label Grid.Column="2" VerticalAlignment="Center" Content="Method:"
                                   Visibility="{Binding HideMethod, Converter={StaticResource InvertedBoolToVisibilityConverter}}"/>
                        <TextBox Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left"
                                     MinWidth="60" Text="{Binding Method}" Visibility="{Binding HideMethod, Converter={StaticResource InvertedBoolToVisibilityConverter}}"/>
                        <Border Grid.Column="4" Margin="3" Background="IndianRed"
                                    BorderThickness="0" CornerRadius="4" Width="28" Height="28">
                          <Button Content="X" FontSize="14" FontWeight="Bold" Foreground="White"
                                      Background="Transparent" BorderThickness="0" Click="DeleteEvent_Click"/>
                        </Border>
                      </Grid>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </Border>
            </Grid>
          </Border>
        </DataTemplate>
      </ListBox.ItemTemplate>
    </ListBox>
  </Grid>
</UserControl>
